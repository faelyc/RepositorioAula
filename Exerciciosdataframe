{"cells":[{"cell_type":"code","source":["from google.colab import drive"],"metadata":{"id":"6jYujaFNYrki"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["drive.mount('/content/fdrive')"],"metadata":{"id":"ijhOqaAzY9j_","executionInfo":{"status":"ok","timestamp":1744465948546,"user_tz":180,"elapsed":21292,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"1f3e9164-dd28-42f7-e4a8-f9bfb40d97c8","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/fdrive\n"]}]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"nJpeA1RPZVv7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Data = pd.read_excel(r'/content/fdrive/MyDrive/vendas.xlsx')"],"metadata":{"id":"7pqBInibZd_r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["display(pd.DataFrame(Data))"],"metadata":{"id":"_LnFJFsBZh7P","executionInfo":{"status":"ok","timestamp":1744466076366,"user_tz":180,"elapsed":68,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"0e1e33c3-03f2-4157-b833-3ce08fe2a31d","colab":{"base_uri":"https://localhost:8080/","height":424}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  ELETRODOMESTICOS        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  \n","0         405.55  \n","1        2866.20  \n","2        3292.72  \n","3        1294.95  \n","4            NaN  \n","..           ...  \n","495      1545.72  \n","496       230.89  \n","497       441.30  \n","498       293.93  \n","499      1479.81  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-e5c7088f-4310-437b-9dff-a286f7d56106\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>data</th>\n","      <th>loja</th>\n","      <th>categoria</th>\n","      <th>produto</th>\n","      <th>quantidade</th>\n","      <th>valor_venda</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-07-20</td>\n","      <td>Vento Norte</td>\n","      <td>ELETRODOMESTICOS</td>\n","      <td>Aquecedor</td>\n","      <td>5.0</td>\n","      <td>405.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-05-30</td>\n","      <td>Vento Norte</td>\n","      <td>sazonal</td>\n","      <td>Guarda-chuva</td>\n","      <td>6.0</td>\n","      <td>2866.20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-25</td>\n","      <td>Vento Norte</td>\n","      <td>roupas</td>\n","      <td>Calça</td>\n","      <td>8.0</td>\n","      <td>3292.72</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-07-10</td>\n","      <td>Chuva Clara</td>\n","      <td>roupas</td>\n","      <td>Casaco</td>\n","      <td>5.0</td>\n","      <td>1294.95</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-05-29</td>\n","      <td>Porto Sol</td>\n","      <td>infantil</td>\n","      <td>Blusa Infantil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>2024-08-23</td>\n","      <td>Porto Sol</td>\n","      <td>eletrodomesticos</td>\n","      <td>Ventilador</td>\n","      <td>4.0</td>\n","      <td>1545.72</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>2024-12-19</td>\n","      <td>Vento Norte</td>\n","      <td>eletrodomesticos</td>\n","      <td>Ventilador</td>\n","      <td>1.0</td>\n","      <td>230.89</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>2024-05-12</td>\n","      <td>Vila Neve</td>\n","      <td>infantil</td>\n","      <td>Blusa Infantil</td>\n","      <td>6.0</td>\n","      <td>441.30</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>2024-03-08</td>\n","      <td>Vila Neve</td>\n","      <td>eletrodomesticos</td>\n","      <td>Ar-condicionado</td>\n","      <td>1.0</td>\n","      <td>293.93</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>2024-07-25</td>\n","      <td>Vento Norte</td>\n","      <td>sazonal</td>\n","      <td>Guarda-chuva</td>\n","      <td>3.0</td>\n","      <td>1479.81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5c7088f-4310-437b-9dff-a286f7d56106')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5c7088f-4310-437b-9dff-a286f7d56106 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5c7088f-4310-437b-9dff-a286f7d56106');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84418969-7273-4806-aaa0-6ac19b715e38\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84418969-7273-4806-aaa0-6ac19b715e38')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84418969-7273-4806-aaa0-6ac19b715e38 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(pd\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"data\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01 00:00:00\",\n        \"max\": \"2024-12-30 00:00:00\",\n        \"num_unique_values\": 284,\n        \"samples\": [\n          \"2024-10-22 00:00:00\",\n          \"2024-11-10 00:00:00\",\n          \"2024-04-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loja\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Chuva Clara\",\n          \"Vila Neve\",\n          \"Vento Norte\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"categoria\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"sazonal\",\n          \"ROUPAS\",\n          \"ELETRODOMESTICOS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"produto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Camiseta\",\n          \"Ventilador\",\n          \"Aquecedor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantidade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.881517272571613,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          4.0,\n          6.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"valor_venda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1110.1159307942046,\n        \"min\": 35.9,\n        \"max\": 4928.6,\n        \"num_unique_values\": 419,\n        \"samples\": [\n          201.16,\n          1725.85,\n          929.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["#1.Padronizar a coluna &#39;categoria&#39; para minúsculas.\n","Data['categoria'] = Data['categoria'].str.lower()\n","print(Data)"],"metadata":{"id":"WkqWRr6XZnc4","executionInfo":{"status":"ok","timestamp":1744466078745,"user_tz":180,"elapsed":13,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"ee80ce0b-34e1-4b24-dfb7-fe72bbb1563b","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  eletrodomesticos        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  \n","0         405.55  \n","1        2866.20  \n","2        3292.72  \n","3        1294.95  \n","4            NaN  \n","..           ...  \n","495      1545.72  \n","496       230.89  \n","497       441.30  \n","498       293.93  \n","499      1479.81  \n","\n","[500 rows x 6 columns]\n"]}]},{"cell_type":"code","source":["#2.Remover registros onde a quantidade está ausente\n","data_ausente = Data.dropna(subset=['quantidade'])\n","\n","print(data_ausente)"],"metadata":{"id":"jMel5RwJZz-J","executionInfo":{"status":"ok","timestamp":1744466080754,"user_tz":180,"elapsed":14,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"6e581080-c633-47b8-82b1-8185955c30d0","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  eletrodomesticos        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","5   2024-08-31    Porto Sol           sazonal    Manta térmica         2.0   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  \n","0         405.55  \n","1        2866.20  \n","2        3292.72  \n","3        1294.95  \n","5         957.96  \n","..           ...  \n","495      1545.72  \n","496       230.89  \n","497       441.30  \n","498       293.93  \n","499      1479.81  \n","\n","[455 rows x 6 columns]\n"]}]},{"cell_type":"code","source":["#3. Remover espaços extras e padronizar com primeira letra maiúscula (estilo título)\n","\n","Data.columns = [col.title() for col in Data.columns]\n","print(Data.columns)"],"metadata":{"id":"VkAuisUgbKpx","executionInfo":{"status":"ok","timestamp":1744466083856,"user_tz":180,"elapsed":11,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"7e0b5f59-5e12-4bb8-f5f5-c3261aa9c8d1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Data', 'Loja', 'Categoria', 'Produto', 'Quantidade', 'Valor_Venda'], dtype='object')\n"]}]},{"cell_type":"code","source":["#4. Garantir que a coluna data seja datetime\n","Data['Data'] = pd.to_datetime(Data['Data'])"],"metadata":{"id":"wHjeC6HPbOFP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#5. Calcular valor unitário real das vendas válidas\n","import pandas as pd\n","Data = pd.DataFrame(Data)\n","\n","Data['valor_unitario'] = Data['valor_venda'] / Data['quantidade']\n","print(Data)"],"metadata":{"id":"G2PIh3TObQ4v","executionInfo":{"status":"ok","timestamp":1744467223493,"user_tz":180,"elapsed":17,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"602631e2-e576-4989-c320-fe7a437dec0d","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  ELETRODOMESTICOS        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  valor_unitario  \n","0         405.55           81.11  \n","1        2866.20          477.70  \n","2        3292.72          411.59  \n","3        1294.95          258.99  \n","4            NaN             NaN  \n","..           ...             ...  \n","495      1545.72          386.43  \n","496       230.89          230.89  \n","497       441.30           73.55  \n","498       293.93          293.93  \n","499      1479.81          493.27  \n","\n","[500 rows x 7 columns]\n"]}]},{"cell_type":"code","source":["#6. Calcular valor médio unitário por produto (sem considerar nulos)\n","import pandas as pd\n","Data = pd.read_excel(r'/content/fdrive/MyDrive/vendas.xlsx')\n","Data = pd.DataFrame(Data)\n","media_valor = Data['quantidade'].mean()\n","Data['valor_venda'].fillna(media_valor, inplace=True)\n","print(media_valor)"],"metadata":{"id":"UNT4OgMtnpgf","executionInfo":{"status":"ok","timestamp":1744466351172,"user_tz":180,"elapsed":81,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"cd732178-3576-49cc-d9c4-7f198a9b34c3","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5.483516483516484\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-64-122aeeab7655>:6: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  Data['valor_venda'].fillna(media_valor, inplace=True)\n"]}]},{"cell_type":"code","source":["#7. Agrupar e calcular média\n","import pandas as pd\n","\n","Data = pd.read_excel(r'/content/fdrive/MyDrive/vendas.xlsx')\n","data = Data.groupby('valor_venda')['valor_venda'].count()\n","display(data)\n","Data = pd.DataFrame(Data)\n","media_idade = Data['valor_venda'].mean()\n","\n","print(\"Media:\", media_idade)\n"],"metadata":{"id":"W9mTB76GbWFo","executionInfo":{"status":"ok","timestamp":1744480722612,"user_tz":180,"elapsed":129,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"8ddda19a-4771-4271-9cd6-5a270c1c7e38","colab":{"base_uri":"https://localhost:8080/","height":507}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["valor_venda\n","35.90      1\n","36.53      1\n","42.94      1\n","63.90      1\n","66.03      1\n","          ..\n","4326.20    1\n","4336.20    1\n","4361.50    1\n","4495.77    1\n","4928.60    1\n","Name: valor_venda, Length: 419, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>valor_venda</th>\n","    </tr>\n","    <tr>\n","      <th>valor_venda</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>35.90</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>36.53</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>42.94</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>63.90</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>66.03</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4326.20</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4336.20</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4361.50</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4495.77</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4928.60</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>419 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Media: 1477.5251428571428\n"]}]},{"cell_type":"code","source":["#8.Preencher valor_unitario ausente\n","import pandas as pd\n","\n","Data['valor_unitario'] = Data['valor_venda'] / Data['quantidade']\n","print(Data)\n","\n","valor_especifico = 0\n","Data['valor_unitario'].fillna(valor_especifico, inplace=True)\n","\n","print(Data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yWuhR_-4YnnQ","executionInfo":{"status":"ok","timestamp":1744468137145,"user_tz":180,"elapsed":20,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"65c1e42c-631d-4738-f877-7b7055d1cb08"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  ELETRODOMESTICOS        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  valor_unitario  \n","0         405.55           81.11  \n","1        2866.20          477.70  \n","2        3292.72          411.59  \n","3        1294.95          258.99  \n","4            NaN             NaN  \n","..           ...             ...  \n","495      1545.72          386.43  \n","496       230.89          230.89  \n","497       441.30           73.55  \n","498       293.93          293.93  \n","499      1479.81          493.27  \n","\n","[500 rows x 7 columns]\n","          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  ELETRODOMESTICOS        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  valor_unitario  \n","0         405.55           81.11  \n","1        2866.20          477.70  \n","2        3292.72          411.59  \n","3        1294.95          258.99  \n","4            NaN            0.00  \n","..           ...             ...  \n","495      1545.72          386.43  \n","496       230.89          230.89  \n","497       441.30           73.55  \n","498       293.93          293.93  \n","499      1479.81          493.27  \n","\n","[500 rows x 7 columns]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-99-421c4a1cfb8e>:7: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  Data['valor_unitario'].fillna(valor_especifico, inplace=True)\n"]}]},{"cell_type":"code","source":["#9. Recalcular valor_venda\n","Data['valor_venda'] = Data['quantidade'] * Data['valor_venda']\n","\n","print(Data)"],"metadata":{"id":"U0LCIxuqbdV7","executionInfo":{"status":"ok","timestamp":1744466444152,"user_tz":180,"elapsed":19,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"69f2ca64-690d-4f77-b29f-45c25436aeee","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  ELETRODOMESTICOS        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  \n","0        2027.75  \n","1       17197.20  \n","2       26341.76  \n","3        6474.75  \n","4            NaN  \n","..           ...  \n","495      6182.88  \n","496       230.89  \n","497      2647.80  \n","498       293.93  \n","499      4439.43  \n","\n","[500 rows x 6 columns]\n"]}]},{"cell_type":"code","source":["#10. Salvar o novo DataFrame limpo em um novo arquivo Excel\n","import pandas as pd\n","data_novo = pd.DataFrame(data_novo)\n","\n","data_novo.to_excel('novo_vendas.xlsx', index=False)\n","\n","print(\"DataFrame salvo com sucesso em 'novo_vendas.xlsx'\")"],"metadata":{"id":"9xh183xxbgsQ","executionInfo":{"status":"ok","timestamp":1744461379313,"user_tz":180,"elapsed":134,"user":{"displayName":"","userId":""}},"outputId":"62d53ee8-6c54-499a-c224-7d700a0f1846","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DataFrame salvo com sucesso em 'novo_vendas.xlsx'\n"]}]},{"cell_type":"code","source":["#1. Total de vendas por loja - Agrupar por loja e somar o valor total vendido\n","import pandas as pd\n","\n","Data = pd.DataFrame(Data)\n","total_vendas_por_loja = Data.groupby('loja')['valor_venda'].sum().reset_index()\n","\n","\n","print(total_vendas_por_loja)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Al4Zt7dPGQrM","executionInfo":{"status":"ok","timestamp":1744468283427,"user_tz":180,"elapsed":55,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"b2dc95cd-a79d-4c58-de6d-1586c48a04a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          loja  valor_venda\n","0  Chuva Clara    167110.14\n","1    Porto Sol    148059.25\n","2  Vento Norte    160780.08\n","3    Vila Neve    144611.09\n"]}]},{"cell_type":"code","source":["#2. Evolução mensal de vendas -  Identificar sazonalidades e picos mensais.\n","import pandas as pd\n","\n","Data = pd.DataFrame(Data)\n","total_vendas_por_mes = Data.groupby('loja')['valor_venda'].sum().reset_index()\n","\n","print(total_vendas_por_mes)\n","\n","\n","data_ordenado = Data.sort_values(by='valor_venda', ascending=False)\n","\n","print(data_ordenado)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"au2FVqYXGSEe","executionInfo":{"status":"ok","timestamp":1744471378338,"user_tz":180,"elapsed":49,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"0fb511ea-c2ec-48ee-fc57-c90ee06c3c0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          loja  valor_venda\n","0  Chuva Clara    167110.14\n","1    Porto Sol    148059.25\n","2  Vento Norte    160780.08\n","3    Vila Neve    144611.09\n","          data         loja         categoria          produto  quantidade  \\\n","241 2024-11-05    Porto Sol           sazonal   Protetor Solar        10.0   \n","469 2024-10-12  Chuva Clara          infantil        Lancheira         9.0   \n","348 2024-03-12  Chuva Clara  eletrodomesticos  Ar-condicionado        10.0   \n","51  2024-06-13  Vento Norte            roupas              NaN         9.0   \n","114 2024-08-01  Chuva Clara           sazonal   Protetor Solar        10.0   \n","..         ...          ...               ...              ...         ...   \n","452 2024-07-17    Vila Neve           sazonal   Protetor Solar         1.0   \n","454 2024-03-15  Vento Norte            roupas         Camiseta         9.0   \n","465 2024-04-27    Porto Sol            roupas           Casaco         NaN   \n","481 2024-06-09  Chuva Clara  eletrodomesticos        Aquecedor         NaN   \n","492 2024-10-06    Vila Neve           sazonal    Manta térmica         NaN   \n","\n","     valor_venda  valor_unitario        Mês  Evolução Mensal  \n","241      4928.60          492.86 2024-11-05        23.399010  \n","469      4495.77          499.53 2024-10-12         4.836010  \n","348      4361.50          436.15 2024-03-12         1.467247  \n","51       4336.20          481.80 2024-06-13         0.785944  \n","114      4326.20          432.62 2024-08-01        10.052013  \n","..           ...             ...        ...              ...  \n","452          NaN            0.00 2024-07-17         0.000000  \n","454          NaN            0.00 2024-03-15         0.000000  \n","465          NaN            0.00 2024-04-27         0.000000  \n","481          NaN            0.00 2024-06-09         0.000000  \n","492          NaN            0.00 2024-10-06         0.000000  \n","\n","[500 rows x 9 columns]\n"]}]},{"cell_type":"code","source":["#3. Agrupar por mês e somar vendas\n","import pandas as pd\n","\n","\n","Data = pd.DataFrame(Data)\n","Data['data'] = pd.to_datetime(Data['data'])\n","total_vendas_por_mês = Data.groupby('data')['valor_venda'].sum().reset_index()\n","\n","print(total_vendas_por_mês)\n","\n","data = Data['valor_venda'].sum()\n","print(f\"Total de vendas: {data}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZYhIY5OAGWoS","executionInfo":{"status":"ok","timestamp":1744479623143,"user_tz":180,"elapsed":26,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"f6e4387b-5ccc-4d25-8223-ead08f6f5344"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          data  valor_venda\n","0   2024-01-01      1767.76\n","1   2024-01-02      4912.47\n","2   2024-01-03      1352.34\n","3   2024-01-04       457.92\n","4   2024-01-05       311.72\n","..         ...          ...\n","279 2024-12-26       565.06\n","280 2024-12-27      5304.45\n","281 2024-12-28       163.98\n","282 2024-12-29       330.22\n","283 2024-12-30      1409.28\n","\n","[284 rows x 2 columns]\n","Total de vendas: 620560.5599999999\n"]}]},{"cell_type":"code","source":["#4. Produtos mais vendidos (por volume) Objetivo: saber o que mais sai no caixa.\n","import pandas as pd\n","\n","Data = pd.DataFrame(Data)\n","\n","vendas_por_produto = Data.groupby('produto')['quantidade'].sum().reset_index()\n","\n","\n","vendas_por_produto = vendas_por_produto.sort_values(by='quantidade', ascending=False)\n","print(vendas_por_produto)"],"metadata":{"id":"LHGYwH-HGnBR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744473170033,"user_tz":180,"elapsed":16,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"6f98b88a-0f17-4e9b-abcb-fdf39558c8a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            produto  quantidade\n","10   Protetor Solar       260.0\n","6      Guarda-chuva       253.0\n","8     Manta térmica       215.0\n","0         Aquecedor       215.0\n","9           Mochila       192.0\n","7         Lancheira       191.0\n","2    Blusa Infantil       181.0\n","11       Ventilador       165.0\n","3             Calça       163.0\n","5            Casaco       156.0\n","1   Ar-condicionado       153.0\n","12          Vestido       148.0\n","4          Camiseta       130.0\n"]}]},{"cell_type":"code","source":["#5. Comparação entre categorias. Objetivo: analisar quais categorias são mais lucrativas.\n","import pandas as pd\n","\n","Data = pd.DataFrame(Data)\n","lucro_por_categoria = Data.groupby('produto')['valor_venda'].sum().reset_index()\n","\n","lucro_por_categoria = lucro_por_categoria.sort_values(by='valor_venda', ascending=False)\n","print(lucro_por_categoria)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y0fSQtpyvTDJ","executionInfo":{"status":"ok","timestamp":1744473850252,"user_tz":180,"elapsed":10,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"3efef0e4-114b-4243-8fd4-9baf6a61906c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            produto  valor_venda\n","10   Protetor Solar     71095.35\n","9           Mochila     58042.64\n","6      Guarda-chuva     57962.81\n","7         Lancheira     47749.97\n","2    Blusa Infantil     45697.99\n","11       Ventilador     45034.42\n","12          Vestido     44515.70\n","8     Manta térmica     42264.45\n","1   Ar-condicionado     42186.30\n","3             Calça     39877.70\n","5            Casaco     37625.42\n","0         Aquecedor     35569.99\n","4          Camiseta     32989.71\n"]}]},{"cell_type":"code","source":["#6. Comparação entre lojas por categoria. Objetivo: avaliar se há especialização ou foco diferente entre as lojas, com base nas categorias que mais vendem.\n","import pandas as pd\n","\n","Data = pd.DataFrame(Data)\n","lucro_por_categoria = Data.groupby('categoria')['valor_venda'].sum().reset_index()\n","\n","lucro_por_categoria = lucro_por_categoria.sort_values(by='valor_venda', ascending=False)\n","print(lucro_por_categoria)"],"metadata":{"id":"vvippyjsGvLy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744474513986,"user_tz":180,"elapsed":12,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"85d90479-9790-4003-e052-2ba396deff4a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          categoria  valor_venda\n","7           sazonal    161336.71\n","6            roupas    157869.57\n","5          infantil    144944.36\n","4  eletrodomesticos    119980.10\n","3           SAZONAL     14086.75\n","1          INFANTIL     12696.65\n","0  ELETRODOMESTICOS      5604.56\n","2            ROUPAS      4041.86\n"]}]},{"cell_type":"code","source":["#7. Plotar como gráfico de barras empilhadas\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np\n","Data = pd.read_excel(r'/content/fdrive/MyDrive/vendas.xlsx')\n","display(pd.DataFrame(Data))\n","fig, ax = plt.subplots(figsize=(8,5))\n","plt.bar(Data['loja'], Data['valor_venda'], color = \"blue\", edgecolor = \"black\", linewidth = 1)\n","plt.xticks(rotation = 45)\n","plt.xlabel('Lojas')\n","plt.ylabel('R$')\n","plt.title('Dados Vendas')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"1UMLb6pgGx2b","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1744477729592,"user_tz":180,"elapsed":905,"user":{"displayName":"RAFAEL Y CAVALCANTE","userId":"13845795385403835968"}},"outputId":"e4b204ec-46bc-460d-e2db-f7e553aa1586"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["          data         loja         categoria          produto  quantidade  \\\n","0   2024-07-20  Vento Norte  ELETRODOMESTICOS        Aquecedor         5.0   \n","1   2024-05-30  Vento Norte           sazonal     Guarda-chuva         6.0   \n","2   2024-01-25  Vento Norte            roupas            Calça         8.0   \n","3   2024-07-10  Chuva Clara            roupas           Casaco         5.0   \n","4   2024-05-29    Porto Sol          infantil   Blusa Infantil         NaN   \n","..         ...          ...               ...              ...         ...   \n","495 2024-08-23    Porto Sol  eletrodomesticos       Ventilador         4.0   \n","496 2024-12-19  Vento Norte  eletrodomesticos       Ventilador         1.0   \n","497 2024-05-12    Vila Neve          infantil   Blusa Infantil         6.0   \n","498 2024-03-08    Vila Neve  eletrodomesticos  Ar-condicionado         1.0   \n","499 2024-07-25  Vento Norte           sazonal     Guarda-chuva         3.0   \n","\n","     valor_venda  \n","0         405.55  \n","1        2866.20  \n","2        3292.72  \n","3        1294.95  \n","4            NaN  \n","..           ...  \n","495      1545.72  \n","496       230.89  \n","497       441.30  \n","498       293.93  \n","499      1479.81  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-5955246b-799d-4127-825b-e1557ff5b213\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>data</th>\n","      <th>loja</th>\n","      <th>categoria</th>\n","      <th>produto</th>\n","      <th>quantidade</th>\n","      <th>valor_venda</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-07-20</td>\n","      <td>Vento Norte</td>\n","      <td>ELETRODOMESTICOS</td>\n","      <td>Aquecedor</td>\n","      <td>5.0</td>\n","      <td>405.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-05-30</td>\n","      <td>Vento Norte</td>\n","      <td>sazonal</td>\n","      <td>Guarda-chuva</td>\n","      <td>6.0</td>\n","      <td>2866.20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-25</td>\n","      <td>Vento Norte</td>\n","      <td>roupas</td>\n","      <td>Calça</td>\n","      <td>8.0</td>\n","      <td>3292.72</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-07-10</td>\n","      <td>Chuva Clara</td>\n","      <td>roupas</td>\n","      <td>Casaco</td>\n","      <td>5.0</td>\n","      <td>1294.95</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-05-29</td>\n","      <td>Porto Sol</td>\n","      <td>infantil</td>\n","      <td>Blusa Infantil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>2024-08-23</td>\n","      <td>Porto Sol</td>\n","      <td>eletrodomesticos</td>\n","      <td>Ventilador</td>\n","      <td>4.0</td>\n","      <td>1545.72</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>2024-12-19</td>\n","      <td>Vento Norte</td>\n","      <td>eletrodomesticos</td>\n","      <td>Ventilador</td>\n","      <td>1.0</td>\n","      <td>230.89</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>2024-05-12</td>\n","      <td>Vila Neve</td>\n","      <td>infantil</td>\n","      <td>Blusa Infantil</td>\n","      <td>6.0</td>\n","      <td>441.30</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>2024-03-08</td>\n","      <td>Vila Neve</td>\n","      <td>eletrodomesticos</td>\n","      <td>Ar-condicionado</td>\n","      <td>1.0</td>\n","      <td>293.93</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>2024-07-25</td>\n","      <td>Vento Norte</td>\n","      <td>sazonal</td>\n","      <td>Guarda-chuva</td>\n","      <td>3.0</td>\n","      <td>1479.81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5955246b-799d-4127-825b-e1557ff5b213')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5955246b-799d-4127-825b-e1557ff5b213 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5955246b-799d-4127-825b-e1557ff5b213');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ac87d2f4-0828-4d5c-acaf-021756fa087d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac87d2f4-0828-4d5c-acaf-021756fa087d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ac87d2f4-0828-4d5c-acaf-021756fa087d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"plt\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"data\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01 00:00:00\",\n        \"max\": \"2024-12-30 00:00:00\",\n        \"num_unique_values\": 284,\n        \"samples\": [\n          \"2024-10-22 00:00:00\",\n          \"2024-11-10 00:00:00\",\n          \"2024-04-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"loja\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Chuva Clara\",\n          \"Vila Neve\",\n          \"Vento Norte\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"categoria\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"sazonal\",\n          \"ROUPAS\",\n          \"ELETRODOMESTICOS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"produto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Camiseta\",\n          \"Ventilador\",\n          \"Aquecedor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantidade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.881517272571613,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          4.0,\n          6.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"valor_venda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1110.1159307942046,\n        \"min\": 35.9,\n        \"max\": 4928.6,\n        \"num_unique_values\": 419,\n        \"samples\": [\n          201.16,\n          1725.85,\n          929.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["<ipython-input-180-9dc71390d376>:13: UserWarning: Legend does not support handles for str instances.\n","A proxy artist may be used instead.\n","See: https://matplotlib.org/stable/users/explain/axes/legend_guide.html#controlling-the-legend-entries\n","  plt.legend(\"Vendas\", \"Lojas\")\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1744462955751}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}